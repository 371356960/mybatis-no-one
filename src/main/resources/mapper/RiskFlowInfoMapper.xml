<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfect.moudle.system.dao.RiskFlowInfoMapper" >
  <resultMap id="BaseResultMap" type="com.perfect.moudle.system.entity.RiskFlowInfo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="prod_id" property="prod_id" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="del_flag" property="del_flag" jdbcType="INTEGER" />
    <result column="create_by" property="create_by" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_by" property="update_by" jdbcType="VARCHAR" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.perfect.moudle.system.entity.RiskFlowInfo" extends="BaseResultMap" >
    <result column="rule_setting" property="rule_setting" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, prod_id, status, del_flag, create_by, create_time, update_by, update_time
  </sql>
  <sql id="Blob_Column_List" >
    rule_setting
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.perfect.moudle.system.entity.RiskFlowInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_scf_risk_flow_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.perfect.moudle.system.entity.RiskFlowInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_scf_risk_flow_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_scf_risk_flow_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_scf_risk_flow_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.perfect.moudle.system.entity.RiskFlowInfoExample" >
    delete from t_scf_risk_flow_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.perfect.moudle.system.entity.RiskFlowInfo" >
    insert into t_scf_risk_flow_info (id, prod_id, status, 
      del_flag, create_by, create_time, 
      update_by, update_time, rule_setting
      )
    values (#{id,jdbcType=VARCHAR}, #{prod_id,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{del_flag,jdbcType=INTEGER}, #{create_by,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_by,jdbcType=VARCHAR}, #{update_time,jdbcType=TIMESTAMP}, #{rule_setting,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.perfect.moudle.system.entity.RiskFlowInfo" >
    insert into t_scf_risk_flow_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="prod_id != null" >
        prod_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="del_flag != null" >
        del_flag,
      </if>
      <if test="create_by != null" >
        create_by,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_by != null" >
        update_by,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
      <if test="rule_setting != null" >
        rule_setting,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="prod_id != null" >
        #{prod_id,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="del_flag != null" >
        #{del_flag,jdbcType=INTEGER},
      </if>
      <if test="create_by != null" >
        #{create_by,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_by != null" >
        #{update_by,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="rule_setting != null" >
        #{rule_setting,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.perfect.moudle.system.entity.RiskFlowInfoExample" resultType="java.lang.Integer" >
    select count(*) from t_scf_risk_flow_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_scf_risk_flow_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.prod_id != null" >
        prod_id = #{record.prod_id,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.del_flag != null" >
        del_flag = #{record.del_flag,jdbcType=INTEGER},
      </if>
      <if test="record.create_by != null" >
        create_by = #{record.create_by,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_by != null" >
        update_by = #{record.update_by,jdbcType=VARCHAR},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rule_setting != null" >
        rule_setting = #{record.rule_setting,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_scf_risk_flow_info
    set id = #{record.id,jdbcType=VARCHAR},
      prod_id = #{record.prod_id,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      del_flag = #{record.del_flag,jdbcType=INTEGER},
      create_by = #{record.create_by,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_by = #{record.update_by,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      rule_setting = #{record.rule_setting,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_scf_risk_flow_info
    set id = #{record.id,jdbcType=VARCHAR},
      prod_id = #{record.prod_id,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      del_flag = #{record.del_flag,jdbcType=INTEGER},
      create_by = #{record.create_by,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_by = #{record.update_by,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.perfect.moudle.system.entity.RiskFlowInfo" >
    update t_scf_risk_flow_info
    <set >
      <if test="prod_id != null" >
        prod_id = #{prod_id,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="del_flag != null" >
        del_flag = #{del_flag,jdbcType=INTEGER},
      </if>
      <if test="create_by != null" >
        create_by = #{create_by,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_by != null" >
        update_by = #{update_by,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="rule_setting != null" >
        rule_setting = #{rule_setting,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.perfect.moudle.system.entity.RiskFlowInfo" >
    update t_scf_risk_flow_info
    set prod_id = #{prod_id,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      del_flag = #{del_flag,jdbcType=INTEGER},
      create_by = #{create_by,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_by = #{update_by,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      rule_setting = #{rule_setting,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.perfect.moudle.system.entity.RiskFlowInfo" >
    update t_scf_risk_flow_info
    set prod_id = #{prod_id,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      del_flag = #{del_flag,jdbcType=INTEGER},
      create_by = #{create_by,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_by = #{update_by,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>